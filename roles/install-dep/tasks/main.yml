---
# - name: "Set variables"
#   set_fact:
#     path_ansible: "/home/ansible/sample-dir"
#     path_local: "/home/natan/sample-dir"
    
# - name: clone the Requirement files
#   ansible.builtin.git:
#     repo: git@github.com:personal-natan/venv-projects.git
#     dest: sample-dir
#     # single_branch: yes
#     clone: yes
#     version: master
    
# - name: Copy file
#   ansible.builtin.copy:
# # the ENV updates are stored in ${{ env.GITHUB_WORKFLOW }}, check github-workflow yaml  
 
#     # this below setup is a path in private github runner
#     src: /home/ansible/sample-dir/projects
#     remote_src: yes
#     dest: "{{ target }}"

- name: "Set variables"
  set_fact:
    env_path: "/home/runner/work/config-management/config-management/projects"

- name: check folder existing
  with_items: "{{ target }}"
  stat:
    path: "{{ item }}"
  register: path_stat

- name: create folder target if it isnt exist
  loop: "{{ path_stat.results }}"
  file:
    path: "{{ item.item }}/projects"
    state: directory
  when: "{{ not item.stat.exists }}"
  
# list files only
- name: Listing Project
  # shell: ls -pr "{{ target }}"/projects | grep -v /
  
  # the ansible script is stored in github runner path ${{ env.GITHUB_WORKFLOW }}
  shell: ls -pr {{ env_path }} | grep -v /
  register: location

- name: install venv in selected project
  with_items: "{{ location.stdout_lines }}"
  shell: cd "{{ target }}"/projects && python3 -m venv {{ item.split('.') | first }}

- name: copy all env to target
  shell: cp "{{ env_path }}"/{{ item }} "{{ target }}"/projects
  with_items: "{{ location.stdout_lines }}"

- name: install & update requirement.txt
  with_items: "{{ location.stdout_lines }}"
  shell: cd "{{ target }}"/projects && source {{ item.split('.') | first }}/bin/activate && pip install -r {{ item }}
  args:
    executable: /bin/bash

- name: remove unused folder
  shell: rm -rf {{ env_path }}
